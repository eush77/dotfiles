# -*- mode: conf; indent-tabs-mode: t; tab-width: 4; -*-

[include]
	path = .gituser

#
# Core settings.
#
[core]
	excludesfile = ~/.gitignore
	whitespace = trailing-space

#
# UI & interface settings.
#
[color]
	ui = true
[column]
	ui = auto
[pager]
	log = PATH="$PATH:/usr/share/git/diff-highlight" diff-highlight | less
	show = PATH="$PATH:/usr/share/git/diff-highlight" diff-highlight | less
	diff = PATH="$PATH:/usr/share/git/diff-highlight" diff-highlight | less

#
# Per-tool configuration.
#
[grep]
	patternType = perl
	lineNumber = true
[push]
	default = upstream
[rebase]
	autosquash = true
	missingCommitsCheck = error

#
# Aliases
#
[alias]
	alias = ! git config --get-regexp '^alias\\.' |\
		  	  sed -r 's:^alias\\.(\\S+)\\b:\\1\\n:' |\
			  tr -s ' ' |\
			  fmt |\
			  awk -v width=$(git config --name-only --get-regexp '^alias\\.' |\
			  	  	 	     sed -r 's:^.{4}::' |\
							 wc -L) \
				  '/^[^[:space:]]/ { prefix = $0 \" =\" } /^[[:space:]]/ { printf sprintf(\"%%%ds%%s\\n\", width), prefix, $0 } /^[[:space:]]/ { prefix = \"\" }'
	apply-patch = !\
		git apply --check \"$2\" &&\
		git apply \"$2\" &&\
		git add . &&\
		git commit -am \"apply $(basename \"$2\")\" --author=\"$1\" &&\
		true
	br = branch --sort -committerdate
	brieflog = ! GIT_PAGER=cat git log --oneline
	co = checkout
	d = diff
	descend = ! git log --ancestry-path --reverse --format=%h $(git merge-base @ $2)..$2 |\
					sed -n $1p |\
					( test -t 1 && xargs git show || cat ) &&\
				true
	ds = diff --staged
	fixup = ! GIT_EDITOR=true git rebase --autosquash -i
	fshow = ! cd ${GIT_PREFIX:-.} &&\
			  git show $1 >/tmp/$(basename $1) &&\
			  less /tmp/$(basename $1) &&\
			  rm /tmp/$(basename $1) &&\
			  true
	graph = log --all --oneline --decorate --graph
	l = ! git brieflog -10
	reset-unmerged = ! git reset -- $(git ls-files --unmerged |cut -f2 |uniq)
	root = rev-parse --show-toplevel
	s = status --short

	#
	# Experimental.
	#
	archive-branch = ! git push archive $1 && git branch -D $1
	bough = ! git branch --list --sort=refname --no-column $1/\\* $1-dev/\\*
	fix = ! git log -1 --format="%s" $1 |\
		    sed "s:TODO:FIX:" |\
			xargs -d'\\n' -n1 git commit --edit --message &&\
			true
	lb = ! git brieflog $(git merge-base @ $1)..$1 && true
	todo = ! echo TODO: $@ |\
			 xargs -d'\\n' -n1 git commit --allow-empty --edit --message &&\
			 true
