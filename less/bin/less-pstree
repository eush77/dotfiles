#!/bin/bash
# -*- indent-tabs-mode: t; tab-width: 4; -*-

function comm {
	[[ "$(< "/proc/$1/comm")" == "$2" ]]
}

function cmdline {
	tr '\0' '\n' < "/proc/$1/cmdline"
}

function ppid {
	awk '{ print $4 }' "/proc/$1/stat"
}

function ppids {
	while [[ "$1" -gt 1 ]]
	do
		echo "$1"
		set -- "$(ppid "$1")"
	done
}

function describe {
	printf '\033[90m[%5d]\033[m ' "$1"

	local FILES=($(cmdline "$1" | grep -Ev '^(less$|-)'))

	if [[ "${#FILES[@]}" -eq 0 ]]
	then
		local PID=$(ppid "$1")

		if comm "$PID" sh
		then
			PID=$(ppid "$PID")
		fi

		echo $(cmdline "$PID")
	elif [[ "${FILES[0]}" != /tmp/*@ ]]
	then
		echo "${FILES[@]}"
	else
		local PARTS=(${FILES[0]//@/ })
		printf 'at %s:' "${PARTS[1]}"

		for FILE in "${FILES[@]}"
		do
            PARTS=(${FILE//@/ })
			printf ' %s' "${PARTS[2]//\\//}"
		done

		echo
	fi
}

PIDS=()

for PID in $(ppids "${1:-$$}")
do
	if comm "$PID" less
	then
		PIDS=("${PIDS[@]}" "$PID")
	fi
done

for ((n=0; n < "${#PIDS[@]}"; ++n))
do
	printf '%s ' "$n"
	describe "${PIDS[n]}"
done | fzf --ansi --disabled --header="Session stack" --height=5 --with-nth=2.. | if read n _ && [[ "$n" -gt 0 ]]
then
	kill "${PIDS[@]:0:n}"
fi
