(menu-bar-mode -1)
(setq initial-scratch-message nil)
(setq-default indent-tabs-mode nil)
(setq c-basic-offset 4)
(defvar backup-dir "~/.emacs-backups")
(setq backup-directory-alist (list (cons "." backup-dir)))
(setq make-backup-files nil)
(setq auto-save nil)
(global-set-key (kbd "C-c M-c") 'uncomment-region)
; Manual indentation
; (defun dotab nil (interactive) (insert "    "))
; (global-set-key (kbd "C-q") 'dotab)
; (defun untab nil (interactive) (delete-backward-char 4))
; (global-set-key (kbd "M-q") 'untab)
(add-hook 'emacs-startup-hook 'column-number-mode)
(add-hook 'before-save-hook 'delete-trailing-whitespace)
(add-to-list 'auto-mode-alist '("\\.m$" . octave-mode))
(add-to-list 'auto-mode-alist '("\\.h$" . c++-mode))

(set 'load-path (cons "~/.emacs.d/modules" load-path))
(require 'sws-mode)
(require 'jade-mode)
(require 'stylus-mode)

(defun find-tag-no-prompt ()
  "Jump to the tag at point without prompting"
  (interactive)
  (find-tag (find-tag-default)))
;; don't prompt when finding a tag
(global-set-key (kbd "M-.") 'find-tag-no-prompt)

(require 'ido)
(ido-mode t)
(require 'ido-hacks)
(ido-hacks-mode t)

(global-set-key (kbd "C-<right>") 'mc/edit-lines)
(global-set-key (kbd "C-<down>") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<up>") 'mc/mark-previous-like-this)
(global-set-key (kbd "C-M-<down>") 'mc/mark-all-like-this)
(global-set-key (kbd "C-x M-SPC") 'set-rectangular-region-anchor)

;; http://stackoverflow.com/a/12934513/2424184
(require 'font-lock)
(defun --copy-face (new-face face)
  "Define NEW-FACE from existing FACE."
  (copy-face face new-face)
  (eval `(defvar ,new-face nil))
  (set new-face new-face))
(--copy-face 'font-lock-label-face  ; labels, case, public, private, proteced, namespace-tags
         'font-lock-keyword-face)
(--copy-face 'font-lock-doc-markup-face ; comment markups such as Javadoc-tags
         'font-lock-doc-face)
(--copy-face 'font-lock-doc-string-face ; comment markups
         'font-lock-comment-face)
(global-font-lock-mode t)
(setq font-lock-maximum-decoration t)
(add-hook 'c++-mode-hook
      '(lambda()
        (font-lock-add-keywords
         nil '(;; complete some fundamental keywords
           ("\\<\\(void\\|unsigned\\|signed\\|char\\|short\\|bool\\|int\\|long\\|float\\|double\\)\\>" . font-lock-keyword-face)
           ;; add the new C++11 keywords
           ("\\<\\(alignof\\|alignas\\|constexpr\\|decltype\\|noexcept\\|nullptr\\|static_assert\\|thread_local\\|override\\|final\\)\\>" . font-lock-keyword-face)
           ("\\<\\(char[0-9]+_t\\)\\>" . font-lock-keyword-face)
           ;; PREPROCESSOR_CONSTANT
           ("\\<[A-Z]+[A-Z_]+\\>" . font-lock-constant-face)
           ;; hexadecimal numbers
           ("\\<0[xX][0-9A-Fa-f]+\\>" . font-lock-constant-face)
           ;; integer/float/scientific numbers
           ("\\<[\\-+]*[0-9]*\\.?[0-9]+\\([ulUL]+\\|[eE][\\-+]?[0-9]+\\)?\\>" . font-lock-constant-face)
           ;; user-types (customize!)
           ("\\<[A-Za-z_]+[A-Za-z_0-9]*_\\(t\\|type\\|ptr\\)\\>" . font-lock-type-face)
           ("\\<\\(xstring\\|xchar\\)\\>" . font-lock-type-face)
           ))
        ) t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(inhibit-startup-screen t)
 '(js3-auto-indent-p t)
 '(js3-auto-insert-catch-block nil)
 '(js3-boring-indentation t)
 '(js3-enter-indents-newline t)
 '(js3-highlight-level 3)
 '(js3-include-gears-externs nil)
 '(js3-include-rhino-externs nil)
 '(js3-max-columns 100)
 '(js3-pretty-vars nil)
 '(js3-strict-cond-assign-warning nil)
 '(js3-strict-missing-semi-warning t)
 '(js3-strict-trailing-comma-warning nil)
 '(package-archives (quote (("gnu" . "http://elpa.gnu.org/packages/") ("marmalade" . "http://marmalade-repo.org/packages/") ("melpa" . "http://melpa.milkbox.net/packages/")))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(js3-jsdoc-html-tag-delimiter-face ((t (:foreground "green"))))
 '(js3-jsdoc-html-tag-name-face ((t (:foreground "green"))))
 '(js3-jsdoc-tag-face ((t (:foreground "green"))))
 '(js3-jsdoc-type-face ((t (:foreground "green"))))
 '(js3-jsdoc-value-face ((t (:foreground "green")))))
